name: Prune GHCR

on:
  workflow_call:

permissions:
  contents: write
  packages: write
  security-events: write

jobs:
  prune_images:
    name: Prune old py-kube-downscaler images
    runs-on: ubuntu-latest

    steps:
      - name: Prune Images
        uses: vlaurin/action-ghcr-prune@v0.6.0
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          organization: ${{ github.repository_owner }}
          container: py-kube-downscaler
          dry-run: true
          keep-younger-than: 7 # days
          prune-untagged: true
          prune-tags-regexes: |
            ^commit-

      - name: Delete Cosign Signatures
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GH_OWNER: ${{ github.repository_owner }}
          IMAGE_NAME: py-kube-downscaler
        run: |
          REPO="ghcr.io/$GH_OWNER/$IMAGE_NAME"
          echo "Fetching tags..."

          # Get all remaining tags
          REMAINING_TAGS=$(gh api -H "Accept: application/vnd.github.v3+json" "/orgs/$GH_OWNER/packages/container/$IMAGE_NAME/versions" | jq -r '.[].metadata.container.tags | join("\n")')

          echo "Fetching Cosign signatures..."
          SIG_TAGS=$(gh api -H "Accept: application/vnd.github.v3+json" "/orgs/$GH_OWNER/packages/container/$IMAGE_NAME/versions" | jq -r '.[].metadata.container.tags | map(select(test("\\.sig$"))) | join("\n")')

          for SIG in $SIG_TAGS; do
            IMAGE_TAG="${SIG%.sig}"  # Remove ".sig" to get corresponding image tag

            if ! echo "$REMAINING_TAGS" | grep -q "^$IMAGE_TAG$"; then
              echo "Deleting signature: $SIG"
              gh api --method DELETE -H "Accept: application/vnd.github.v3+json" "/orgs/$GH_OWNER/packages/container/$IMAGE_NAME/versions/$SIG"
            fi
          done
